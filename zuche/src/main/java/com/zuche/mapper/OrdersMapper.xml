<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zuche.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.zuche.entity.Orders" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="store_car_id" property="storeCarId" jdbcType="INTEGER" />
    <result column="user_car_id" property="userCarId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="insurance" property="insurance" jdbcType="REAL" />
    <result column="nodeductibles" property="nodeductibles" jdbcType="REAL" />
    <result column="poundage" property="poundage" jdbcType="REAL" />
    <result column="totalMoney" property="totalmoney" jdbcType="REAL" />
    <result column="disposit" property="disposit" jdbcType="REAL" />
    <result column="getTime" property="gettime" jdbcType="TIMESTAMP" />
    <result column="returnTime" property="returntime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, store_car_id, user_car_id, price, insurance, nodeductibles, poundage, totalMoney, 
    disposit, getTime, returnTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zuche.entity.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuche.entity.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuche.entity.Orders" >
    insert into orders (id, store_car_id, user_car_id, 
      price, insurance, nodeductibles, 
      poundage, totalMoney, disposit, 
      getTime, returnTime)
    values (#{id,jdbcType=VARCHAR}, #{storeCarId,jdbcType=INTEGER}, #{userCarId,jdbcType=INTEGER}, 
      #{price,jdbcType=REAL}, #{insurance,jdbcType=REAL}, #{nodeductibles,jdbcType=REAL}, 
      #{poundage,jdbcType=REAL}, #{totalmoney,jdbcType=REAL}, #{disposit,jdbcType=REAL}, 
      #{gettime,jdbcType=TIMESTAMP}, #{returntime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zuche.entity.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="storeCarId != null" >
        store_car_id,
      </if>
      <if test="userCarId != null" >
        user_car_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="insurance != null" >
        insurance,
      </if>
      <if test="nodeductibles != null" >
        nodeductibles,
      </if>
      <if test="poundage != null" >
        poundage,
      </if>
      <if test="totalmoney != null" >
        totalMoney,
      </if>
      <if test="disposit != null" >
        disposit,
      </if>
      <if test="gettime != null" >
        getTime,
      </if>
      <if test="returntime != null" >
        returnTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="storeCarId != null" >
        #{storeCarId,jdbcType=INTEGER},
      </if>
      <if test="userCarId != null" >
        #{userCarId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="insurance != null" >
        #{insurance,jdbcType=REAL},
      </if>
      <if test="nodeductibles != null" >
        #{nodeductibles,jdbcType=REAL},
      </if>
      <if test="poundage != null" >
        #{poundage,jdbcType=REAL},
      </if>
      <if test="totalmoney != null" >
        #{totalmoney,jdbcType=REAL},
      </if>
      <if test="disposit != null" >
        #{disposit,jdbcType=REAL},
      </if>
      <if test="gettime != null" >
        #{gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="returntime != null" >
        #{returntime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuche.entity.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.storeCarId != null" >
        store_car_id = #{record.storeCarId,jdbcType=INTEGER},
      </if>
      <if test="record.userCarId != null" >
        user_car_id = #{record.userCarId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.insurance != null" >
        insurance = #{record.insurance,jdbcType=REAL},
      </if>
      <if test="record.nodeductibles != null" >
        nodeductibles = #{record.nodeductibles,jdbcType=REAL},
      </if>
      <if test="record.poundage != null" >
        poundage = #{record.poundage,jdbcType=REAL},
      </if>
      <if test="record.totalmoney != null" >
        totalMoney = #{record.totalmoney,jdbcType=REAL},
      </if>
      <if test="record.disposit != null" >
        disposit = #{record.disposit,jdbcType=REAL},
      </if>
      <if test="record.gettime != null" >
        getTime = #{record.gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returntime != null" >
        returnTime = #{record.returntime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set id = #{record.id,jdbcType=VARCHAR},
      store_car_id = #{record.storeCarId,jdbcType=INTEGER},
      user_car_id = #{record.userCarId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      insurance = #{record.insurance,jdbcType=REAL},
      nodeductibles = #{record.nodeductibles,jdbcType=REAL},
      poundage = #{record.poundage,jdbcType=REAL},
      totalMoney = #{record.totalmoney,jdbcType=REAL},
      disposit = #{record.disposit,jdbcType=REAL},
      getTime = #{record.gettime,jdbcType=TIMESTAMP},
      returnTime = #{record.returntime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuche.entity.Orders" >
    update orders
    <set >
      <if test="storeCarId != null" >
        store_car_id = #{storeCarId,jdbcType=INTEGER},
      </if>
      <if test="userCarId != null" >
        user_car_id = #{userCarId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="insurance != null" >
        insurance = #{insurance,jdbcType=REAL},
      </if>
      <if test="nodeductibles != null" >
        nodeductibles = #{nodeductibles,jdbcType=REAL},
      </if>
      <if test="poundage != null" >
        poundage = #{poundage,jdbcType=REAL},
      </if>
      <if test="totalmoney != null" >
        totalMoney = #{totalmoney,jdbcType=REAL},
      </if>
      <if test="disposit != null" >
        disposit = #{disposit,jdbcType=REAL},
      </if>
      <if test="gettime != null" >
        getTime = #{gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="returntime != null" >
        returnTime = #{returntime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuche.entity.Orders" >
    update orders
    set store_car_id = #{storeCarId,jdbcType=INTEGER},
      user_car_id = #{userCarId,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      insurance = #{insurance,jdbcType=REAL},
      nodeductibles = #{nodeductibles,jdbcType=REAL},
      poundage = #{poundage,jdbcType=REAL},
      totalMoney = #{totalmoney,jdbcType=REAL},
      disposit = #{disposit,jdbcType=REAL},
      getTime = #{gettime,jdbcType=TIMESTAMP},
      returnTime = #{returntime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>