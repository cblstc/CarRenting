<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zuche.mapper.StoreCarMapper" >
  <resultMap id="BaseResultMap" type="com.zuche.entity.StoreCar" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="configuration" property="configuration" jdbcType="VARCHAR" />
    <result column="carPhoto" property="carphoto" jdbcType="VARCHAR" />
    <result column="seats" property="seats" jdbcType="INTEGER" />
    <result column="doors" property="doors" jdbcType="INTEGER" />
    <result column="displacement" property="displacement" jdbcType="VARCHAR" />
    <result column="navigator" property="navigator" jdbcType="INTEGER" />
    <result column="pdc" property="pdc" jdbcType="INTEGER" />
    <result column="drivenMode" property="drivenmode" jdbcType="INTEGER" />
    <result column="fuelTankage" property="fueltankage" jdbcType="INTEGER" />
    <result column="gearbox" property="gearbox" jdbcType="INTEGER" />
    <result column="skylight" property="skylight" jdbcType="INTEGER" />
    <result column="aircell" property="aircell" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="insurance" property="insurance" jdbcType="REAL" />
    <result column="nodeductibles" property="nodeductibles" jdbcType="REAL" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, store_id, brand, model, configuration, carPhoto, seats, doors, displacement, 
    navigator, pdc, drivenMode, fuelTankage, gearbox, skylight, aircell, price, insurance, 
    nodeductibles, count, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zuche.entity.StoreCarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from store_car
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store_car
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuche.entity.StoreCarExample" >
    delete from store_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuche.entity.StoreCar" >
    insert into store_car (id, store_id, brand, 
      model, configuration, carPhoto, 
      seats, doors, displacement, 
      navigator, pdc, drivenMode, 
      fuelTankage, gearbox, skylight, 
      aircell, price, insurance, 
      nodeductibles, count, status
      )
    values (#{id,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{configuration,jdbcType=VARCHAR}, #{carphoto,jdbcType=VARCHAR}, 
      #{seats,jdbcType=INTEGER}, #{doors,jdbcType=INTEGER}, #{displacement,jdbcType=VARCHAR}, 
      #{navigator,jdbcType=INTEGER}, #{pdc,jdbcType=INTEGER}, #{drivenmode,jdbcType=INTEGER}, 
      #{fueltankage,jdbcType=INTEGER}, #{gearbox,jdbcType=INTEGER}, #{skylight,jdbcType=INTEGER}, 
      #{aircell,jdbcType=INTEGER}, #{price,jdbcType=REAL}, #{insurance,jdbcType=REAL}, 
      #{nodeductibles,jdbcType=REAL}, #{count,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zuche.entity.StoreCar" >
    insert into store_car
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="configuration != null" >
        configuration,
      </if>
      <if test="carphoto != null" >
        carPhoto,
      </if>
      <if test="seats != null" >
        seats,
      </if>
      <if test="doors != null" >
        doors,
      </if>
      <if test="displacement != null" >
        displacement,
      </if>
      <if test="navigator != null" >
        navigator,
      </if>
      <if test="pdc != null" >
        pdc,
      </if>
      <if test="drivenmode != null" >
        drivenMode,
      </if>
      <if test="fueltankage != null" >
        fuelTankage,
      </if>
      <if test="gearbox != null" >
        gearbox,
      </if>
      <if test="skylight != null" >
        skylight,
      </if>
      <if test="aircell != null" >
        aircell,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="insurance != null" >
        insurance,
      </if>
      <if test="nodeductibles != null" >
        nodeductibles,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null" >
        #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="carphoto != null" >
        #{carphoto,jdbcType=VARCHAR},
      </if>
      <if test="seats != null" >
        #{seats,jdbcType=INTEGER},
      </if>
      <if test="doors != null" >
        #{doors,jdbcType=INTEGER},
      </if>
      <if test="displacement != null" >
        #{displacement,jdbcType=VARCHAR},
      </if>
      <if test="navigator != null" >
        #{navigator,jdbcType=INTEGER},
      </if>
      <if test="pdc != null" >
        #{pdc,jdbcType=INTEGER},
      </if>
      <if test="drivenmode != null" >
        #{drivenmode,jdbcType=INTEGER},
      </if>
      <if test="fueltankage != null" >
        #{fueltankage,jdbcType=INTEGER},
      </if>
      <if test="gearbox != null" >
        #{gearbox,jdbcType=INTEGER},
      </if>
      <if test="skylight != null" >
        #{skylight,jdbcType=INTEGER},
      </if>
      <if test="aircell != null" >
        #{aircell,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="insurance != null" >
        #{insurance,jdbcType=REAL},
      </if>
      <if test="nodeductibles != null" >
        #{nodeductibles,jdbcType=REAL},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuche.entity.StoreCarExample" resultType="java.lang.Integer" >
    select count(*) from store_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store_car
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.configuration != null" >
        configuration = #{record.configuration,jdbcType=VARCHAR},
      </if>
      <if test="record.carphoto != null" >
        carPhoto = #{record.carphoto,jdbcType=VARCHAR},
      </if>
      <if test="record.seats != null" >
        seats = #{record.seats,jdbcType=INTEGER},
      </if>
      <if test="record.doors != null" >
        doors = #{record.doors,jdbcType=INTEGER},
      </if>
      <if test="record.displacement != null" >
        displacement = #{record.displacement,jdbcType=VARCHAR},
      </if>
      <if test="record.navigator != null" >
        navigator = #{record.navigator,jdbcType=INTEGER},
      </if>
      <if test="record.pdc != null" >
        pdc = #{record.pdc,jdbcType=INTEGER},
      </if>
      <if test="record.drivenmode != null" >
        drivenMode = #{record.drivenmode,jdbcType=INTEGER},
      </if>
      <if test="record.fueltankage != null" >
        fuelTankage = #{record.fueltankage,jdbcType=INTEGER},
      </if>
      <if test="record.gearbox != null" >
        gearbox = #{record.gearbox,jdbcType=INTEGER},
      </if>
      <if test="record.skylight != null" >
        skylight = #{record.skylight,jdbcType=INTEGER},
      </if>
      <if test="record.aircell != null" >
        aircell = #{record.aircell,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.insurance != null" >
        insurance = #{record.insurance,jdbcType=REAL},
      </if>
      <if test="record.nodeductibles != null" >
        nodeductibles = #{record.nodeductibles,jdbcType=REAL},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store_car
    set id = #{record.id,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      configuration = #{record.configuration,jdbcType=VARCHAR},
      carPhoto = #{record.carphoto,jdbcType=VARCHAR},
      seats = #{record.seats,jdbcType=INTEGER},
      doors = #{record.doors,jdbcType=INTEGER},
      displacement = #{record.displacement,jdbcType=VARCHAR},
      navigator = #{record.navigator,jdbcType=INTEGER},
      pdc = #{record.pdc,jdbcType=INTEGER},
      drivenMode = #{record.drivenmode,jdbcType=INTEGER},
      fuelTankage = #{record.fueltankage,jdbcType=INTEGER},
      gearbox = #{record.gearbox,jdbcType=INTEGER},
      skylight = #{record.skylight,jdbcType=INTEGER},
      aircell = #{record.aircell,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      insurance = #{record.insurance,jdbcType=REAL},
      nodeductibles = #{record.nodeductibles,jdbcType=REAL},
      count = #{record.count,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuche.entity.StoreCar" >
    update store_car
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null" >
        configuration = #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="carphoto != null" >
        carPhoto = #{carphoto,jdbcType=VARCHAR},
      </if>
      <if test="seats != null" >
        seats = #{seats,jdbcType=INTEGER},
      </if>
      <if test="doors != null" >
        doors = #{doors,jdbcType=INTEGER},
      </if>
      <if test="displacement != null" >
        displacement = #{displacement,jdbcType=VARCHAR},
      </if>
      <if test="navigator != null" >
        navigator = #{navigator,jdbcType=INTEGER},
      </if>
      <if test="pdc != null" >
        pdc = #{pdc,jdbcType=INTEGER},
      </if>
      <if test="drivenmode != null" >
        drivenMode = #{drivenmode,jdbcType=INTEGER},
      </if>
      <if test="fueltankage != null" >
        fuelTankage = #{fueltankage,jdbcType=INTEGER},
      </if>
      <if test="gearbox != null" >
        gearbox = #{gearbox,jdbcType=INTEGER},
      </if>
      <if test="skylight != null" >
        skylight = #{skylight,jdbcType=INTEGER},
      </if>
      <if test="aircell != null" >
        aircell = #{aircell,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="insurance != null" >
        insurance = #{insurance,jdbcType=REAL},
      </if>
      <if test="nodeductibles != null" >
        nodeductibles = #{nodeductibles,jdbcType=REAL},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuche.entity.StoreCar" >
    update store_car
    set store_id = #{storeId,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      configuration = #{configuration,jdbcType=VARCHAR},
      carPhoto = #{carphoto,jdbcType=VARCHAR},
      seats = #{seats,jdbcType=INTEGER},
      doors = #{doors,jdbcType=INTEGER},
      displacement = #{displacement,jdbcType=VARCHAR},
      navigator = #{navigator,jdbcType=INTEGER},
      pdc = #{pdc,jdbcType=INTEGER},
      drivenMode = #{drivenmode,jdbcType=INTEGER},
      fuelTankage = #{fueltankage,jdbcType=INTEGER},
      gearbox = #{gearbox,jdbcType=INTEGER},
      skylight = #{skylight,jdbcType=INTEGER},
      aircell = #{aircell,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      insurance = #{insurance,jdbcType=REAL},
      nodeductibles = #{nodeductibles,jdbcType=REAL},
      count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>