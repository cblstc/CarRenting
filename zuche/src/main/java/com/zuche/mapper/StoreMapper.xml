<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zuche.mapper.StoreMapper" >
  <resultMap id="BaseResultMap" type="com.zuche.entity.Store" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="storename" property="storename" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="REAL" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="totalStar" property="totalstar" jdbcType="INTEGER" />
    <result column="totalComment" property="totalcomment" jdbcType="INTEGER" />
    <result column="avgStar" property="avgstar" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zuche.entity.Store" extends="BaseResultMap" >
    <result column="traffic" property="traffic" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, storename, phone, startTime, endTime, address, longitude, 
    latitude, description, totalStar, totalComment, avgStar, status
  </sql>
  <sql id="Blob_Column_List" >
    traffic
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zuche.entity.StoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zuche.entity.StoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuche.entity.StoreExample" >
    delete from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuche.entity.Store" >
    insert into store (id, username, password, 
      storename, phone, startTime, 
      endTime, address, longitude, 
      latitude, description, totalStar, 
      totalComment, avgStar, status, 
      traffic)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{storename,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=REAL}, 
      #{latitude,jdbcType=REAL}, #{description,jdbcType=VARCHAR}, #{totalstar,jdbcType=INTEGER}, 
      #{totalcomment,jdbcType=INTEGER}, #{avgstar,jdbcType=REAL}, #{status,jdbcType=INTEGER}, 
      #{traffic,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zuche.entity.Store" >
    insert into store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="storename != null" >
        storename,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="totalstar != null" >
        totalStar,
      </if>
      <if test="totalcomment != null" >
        totalComment,
      </if>
      <if test="avgstar != null" >
        avgStar,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="traffic != null" >
        traffic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="storename != null" >
        #{storename,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=REAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="totalstar != null" >
        #{totalstar,jdbcType=INTEGER},
      </if>
      <if test="totalcomment != null" >
        #{totalcomment,jdbcType=INTEGER},
      </if>
      <if test="avgstar != null" >
        #{avgstar,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="traffic != null" >
        #{traffic,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuche.entity.StoreExample" resultType="java.lang.Integer" >
    select count(*) from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.storename != null" >
        storename = #{record.storename,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.totalstar != null" >
        totalStar = #{record.totalstar,jdbcType=INTEGER},
      </if>
      <if test="record.totalcomment != null" >
        totalComment = #{record.totalcomment,jdbcType=INTEGER},
      </if>
      <if test="record.avgstar != null" >
        avgStar = #{record.avgstar,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.traffic != null" >
        traffic = #{record.traffic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update store
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      storename = #{record.storename,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=REAL},
      latitude = #{record.latitude,jdbcType=REAL},
      description = #{record.description,jdbcType=VARCHAR},
      totalStar = #{record.totalstar,jdbcType=INTEGER},
      totalComment = #{record.totalcomment,jdbcType=INTEGER},
      avgStar = #{record.avgstar,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER},
      traffic = #{record.traffic,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      storename = #{record.storename,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=REAL},
      latitude = #{record.latitude,jdbcType=REAL},
      description = #{record.description,jdbcType=VARCHAR},
      totalStar = #{record.totalstar,jdbcType=INTEGER},
      totalComment = #{record.totalcomment,jdbcType=INTEGER},
      avgStar = #{record.avgstar,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuche.entity.Store" >
    update store
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="storename != null" >
        storename = #{storename,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="totalstar != null" >
        totalStar = #{totalstar,jdbcType=INTEGER},
      </if>
      <if test="totalcomment != null" >
        totalComment = #{totalcomment,jdbcType=INTEGER},
      </if>
      <if test="avgstar != null" >
        avgStar = #{avgstar,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="traffic != null" >
        traffic = #{traffic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zuche.entity.Store" >
    update store
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      storename = #{storename,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      description = #{description,jdbcType=VARCHAR},
      totalStar = #{totalstar,jdbcType=INTEGER},
      totalComment = #{totalcomment,jdbcType=INTEGER},
      avgStar = #{avgstar,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      traffic = #{traffic,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuche.entity.Store" >
    update store
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      storename = #{storename,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      description = #{description,jdbcType=VARCHAR},
      totalStar = #{totalstar,jdbcType=INTEGER},
      totalComment = #{totalcomment,jdbcType=INTEGER},
      avgStar = #{avgstar,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>